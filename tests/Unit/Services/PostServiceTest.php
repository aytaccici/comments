<?php

namespace Tests\Unit\Services;

use App\Contracts\PostContract;
use App\Models\Comment;
use App\Models\Post;
use App\Repositories\PostRepository;
use App\Services\PostService;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Pagination\LengthAwarePaginator;
use Tests\TestCase;

class PostServiceTest extends TestCase
{
    use RefreshDatabase;

    protected $postContract;
    protected $postService;
    protected $config;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->postContract= app()->bind(PostContract::class, PostRepository::class);
        $this->postService = app()->make(PostService::class);

    }

    /**
     * A basic unit test example.
     *
     * @return void
     */
    public function test_it_get_post_with_paginate()
    {
        $postCount = 3;
        $commentCount = 5;
        $posts =Post::factory($postCount)
            ->has(Comment::factory()->count($commentCount))
            ->create();

        /**
         * @var $pagination LengthAwarePaginator
         */
       $pagination =$this->postService->paginate();

       $this->assertCount($postCount, $posts->toArray());
       $this->assertCount($commentCount, $pagination->first()->comments);
    }


    public function test_it_pagination_has_no_items()
    {
        /**
         * @var $pagination LengthAwarePaginator
         */
        $pagination =$this->postService->paginate();
        $this->assertEquals(true, $pagination->isEmpty());
    }

    public function test_it_pagination_has_items()
    {
        $postCount = 3;
        $commentCount = 5;
        Post::factory($postCount)
            ->has(Comment::factory()->count($commentCount))
            ->create();

        /**
         * @var $pagination LengthAwarePaginator
         */
        $pagination =$this->postService->paginate();
        $this->assertEquals(true, $pagination->isNotEmpty());
    }

    public function test_it_get_single_post_with_all_comments()
    {
        $postCount = 1;
        $commentCount = 7;
        $singlePost =Post::factory($postCount)
            ->has(Comment::factory()->count($commentCount))
            ->create();

        /**
         * @var $pagination LengthAwarePaginator
         */
        $postWithComments =$this->postService->getPostWithComments(data_get($singlePost->first(),'id'));
        $this->assertCount($commentCount, $postWithComments->comments->toArray());
    }
}
